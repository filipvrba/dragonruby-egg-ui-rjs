export default class ElmModules < HTMLElement
  def initialize
    super

    self.innerHTML = get_title("<elm-spinner></elm-spinner>")
    database.query("select * from modules") do |modules|
      self.innerHTML = init_html(modules)
    end

    window.add_module = add_module
  end

  def init_html(modules)
    l_trs = lambda do
      trs = ""
      modules.forEach do |_module|
        tr = """
          <tr>
            <th scope='row'>    
              <a href='#{_module.github_url}' target='_blank'>
                <p class='fa fa-github my-0'></p>
                <span class='mx-2'>
                #{_module.name}
                </span>
              </a>
            </th>
            <td>#{_module.description}</td>
            <td style='text-align: center;'>#{_module.author}</td>
          </tr>
        """
        trs += tr
      end
      return trs
    end

    t_add = """
      <a onclick='add_module()'>
        <p class='mb-0 fa fa-plus'></p>
        Add
      </a>
    """

    template = get_title(t_add)
    if modules.length > 0
      template = """
      #{get_title()}
      <table class='table'>
        <thead>
          <tr>
            <th style='width: 30%; text-align: left;' scope='col'>
              #{t_add}
            </th>
            <th style='width: 60%;' scope='col'>Description</th>
            <th style='text-align: center;' scope='col'>Author</th>
          </tr>
        </thead>
        <tbody>
          #{l_trs.call()}
        </tbody>
      </table>
      """
    end

    return template
  end

  def get_title(ext = '')
      return """
      <div class='text-center py-3'>
        <h2>Modules</h2>
        #{ext}
      </div>
      """
  end

  def add_module()
    change_page(:module_add)
  end
end